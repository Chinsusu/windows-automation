; server_gui_clients.au3
; GUI d·∫°ng b·∫£ng: ch·ªçn nhi·ªÅu client (checkbox), hi·ªÉn th·ªã Index | IP | Status | Message
; Ph√≠a d∆∞·ªõi c√≥ √¥ nh·∫≠p URL + n√∫t Send (OPEN_URL) v√† Update (UPDATE_AGENT)
; --- Y√™u c·∫ßu: AutoIt 3, SciTE. Kh√¥ng ph·ª• thu·ªôc DB (demo d·ªØ li·ªáu m·∫´u).

#include <GUIConstantsEx.au3>
#include <WindowsConstants.au3>
#include <GuiListView.au3>
#include <GuiEdit.au3>
#include <EditConstants.au3>
#include <StaticConstants.au3>
#include <ButtonConstants.au3>
#include <Array.au3>

Global Const $COLOR_GREEN  = 0x009E3A  ; Online
Global Const $COLOR_ORANGE = 0xFF8C00  ; Offline
Global Const $COLOR_BLUE   = 0x0078D7  ; Updating
Global Const $COLOR_BLACK  = 0x000000

; ---------------- GUI ----------------
Global $gGUI = GUICreate("Clients Control ‚Äî Windows Automation", 1100, 420, -1, -1)
Global $lvID = GUICtrlCreateListView("Ch·ªçn/H·ªßy Ch·ªçn|Index|IP|Status|Message", 10, 10, 900, 270, BitOR($LVS_SHOWSELALWAYS, $LVS_REPORT))
Global $hLV = GUICtrlGetHandle($lvID)

_GUICtrlListView_SetExtendedListViewStyle($hLV, BitOR($LVS_EX_CHECKBOXES, $LVS_EX_FULLROWSELECT, $LVS_EX_GRIDLINES, $LVS_EX_DOUBLEBUFFER))

; Set width c·ªôt
_GUICtrlListView_SetColumnWidth($hLV, 0, 140) ; Ch·ªçn/H·ªßy Ch·ªçn
_GUICtrlListView_SetColumnWidth($hLV, 1, 60)  ; Index
_GUICtrlListView_SetColumnWidth($hLV, 2, 150) ; IP
_GUICtrlListView_SetColumnWidth($hLV, 3, 100) ; Status
_GUICtrlListView_SetColumnWidth($hLV, 4, 430) ; Message

; Khu ƒëi·ªÅu khi·ªÉn b√™n d∆∞·ªõi
GUICtrlCreateLabel("Command", 10, 298, 70, 20)
Global $cmbCmd = GUICtrlCreateCombo("OPEN_URL", 80, 292, 160, 24)
GUICtrlSetData($cmbCmd, "UPDATE_AGENT")

GUICtrlCreateLabel("URL", 260, 298, 30, 20)
Global $inpUrl = GUICtrlCreateInput("", 295, 293, 445, 24)

Global $btnSend   = GUICtrlCreateButton("Send",   760, 292, 70, 26, $BS_DEFPUSHBUTTON)
Global $btnUpdate = GUICtrlCreateButton("Update", 835, 292, 70, 26)

Global $btnSelectAll = GUICtrlCreateButton("Select all", 10, 326, 90, 26)
Global $btnClearAll  = GUICtrlCreateButton("Clear all",  105, 326, 90, 26)
Global $btnReload    = GUICtrlCreateButton("Reload",     200, 326, 90, 26)

; Khu log
GUICtrlCreateLabel("Logs", 930, 10, 160, 18)
Global $edtLog = GUICtrlCreateEdit("", 930, 30, 160, 350, BitOR($ES_AUTOVSCROLL, $ES_MULTILINE, $WS_VSCROLL, $ES_READONLY))

GUISetState(@SW_SHOW)

; -------------- Data demo --------------
; B·∫°n c√≥ th·ªÉ thay b·∫±ng d·ªØ li·ªáu t·ª´ DB/HTTP. ·ªû ƒë√¢y l√† m·∫£ng m·∫´u.
Global $gRows = [ _
    ["", "01", "192.168.2.101", "Online",   "https://earnapp.com/dashboard"], _
    ["", "02", "192.168.2.102", "Online",   "https://youtube.com"], _
    ["", "03", "192.168.2.103", "Offline",  ""], _
    ["", "04", "192.168.2.104", "Offline",  ""], _
    ["", "05", "192.168.2.105", "Updating", ""], _
    ["", "10", "192.168.2.110", "Online",   "https://youtube.com"] _
]

; Load b·∫£ng
_LoadList($gRows)

; ---------------- Main loop ----------------
While 1
    Switch GUIGetMsg()
        Case $GUI_EVENT_CLOSE
            Exit
        Case $btnSend
            _HandleSend()
        Case $btnUpdate
            _HandleUpdate()
        Case $btnSelectAll
            _List_CheckAll(True)
        Case $btnClearAll
            _List_CheckAll(False)
        Case $btnReload
            _ReloadDemo()
    EndSwitch
WEnd

; ==================== FUNCTIONS ====================

Func _LoadList(ByRef $rows)
    _GUICtrlListView_DeleteAllItems($hLV)
    For $i = 0 To UBound($rows) - 1
        Local $line = $rows[$i][0] & "|" & $rows[$i][1] & "|" & $rows[$i][2] & "|" & $rows[$i][3] & "|" & $rows[$i][4]
        Local $idItem = GUICtrlCreateListViewItem($line, $lvID)

        ; T√¥ m√†u theo Status (c·∫£ d√≤ng ‚Äî ƒë∆°n gi·∫£n & ·ªïn ƒë·ªãnh)
        Switch StringLower($rows[$i][3])
            Case "online"
                GUICtrlSetColor($idItem, $COLOR_GREEN)
            Case "offline"
                GUICtrlSetColor($idItem, $COLOR_ORANGE)
            Case "updating"
                GUICtrlSetColor($idItem, $COLOR_BLUE)
            Case Else
                GUICtrlSetColor($idItem, $COLOR_BLACK)
        EndSwitch
    Next
EndFunc

Func _List_GetItemCount()
    Return _GUICtrlListView_GetItemCount($hLV)
EndFunc

Func _List_GetCheckedIndexes()
    Local $n = _List_GetItemCount()
    Local $indices[0]
    For $i = 0 To $n - 1
        If _GUICtrlListView_GetCheckState($hLV, $i) Then
            _ArrayAdd($indices, $i)
        EndIf
    Next
    Return $indices
EndFunc

Func _List_CheckAll($state)
    Local $n = _List_GetItemCount()
    For $i = 0 To $n - 1
        _GUICtrlListView_SetCheckState($hLV, $i, $state)
    Next
EndFunc

Func _List_GetCell($row, $col)
    ; col: 0..4
    Return _GUICtrlListView_GetItemText($hLV, $row, $col)
EndFunc

Func _List_SetCell($row, $col, $text)
    _GUICtrlListView_SetItemText($hLV, $row, $text, $col)
EndFunc

Func _Log($s)
    Local $now = @HOUR & ":" & @MIN & ":" & @SEC & "  "
    GUICtrlSetData($edtLog, GUICtrlRead($edtLog) & $now & $s & @CRLF)
    _GUICtrlEdit_Scroll($edtLog, $SB_SCROLLCARET)
EndFunc

; ----- N√∫t Send: g·ª≠i OPEN_URL -----
Func _HandleSend()
    Local $cmd = GUICtrlRead($cmbCmd)
    If $cmd <> "OPEN_URL" Then
        _Log("‚ö†Ô∏è Command kh√¥ng ph·∫£i OPEN_URL (ƒëang ch·ªçn '" & $cmd & "').")
        Return
    EndIf

    Local $url = StringStripWS(GUICtrlRead($inpUrl), 3)
    Local $sel = _List_GetCheckedIndexes()
    If UBound($sel) = 0 Then
        _Log("‚ö†Ô∏è Ch∆∞a ch·ªçn client n√†o.")
        Return
    EndIf

    For $k = 0 To UBound($sel) - 1
        Local $r = $sel[$k]
        Local $ip = _List_GetCell($r, 2)
        ; n·∫øu √¥ URL tr·ªëng, d√πng Message c·ªßa d√≤ng
        Local $rowUrl = _List_GetCell($r, 4)
        Local $finalUrl = ($url <> "") ? $url : $rowUrl
        If $finalUrl = "" Then
            _Log("‚è≠Ô∏è B·ªè qua " & $ip & " (kh√¥ng c√≥ URL).")
            ContinueLoop
        EndIf

        ; TODO: queue task OPEN_URL cho $ip (ho·∫∑c client_id) ‚Äî ·ªü ƒë√¢y demo log
        _Log("üì§ Send OPEN_URL ‚Üí " & $ip & "  (" & $finalUrl & ")")
        ; V√≠ d·ª• c·∫≠p nh·∫≠t Message c·ªßa d√≤ng b·∫±ng URL v·ª´a g·ª≠i
        _List_SetCell($r, 4, $finalUrl)
    Next
EndFunc

; ----- N√∫t Update: g·ª≠i UPDATE_AGENT -----
Func _HandleUpdate()
    Local $sel = _List_GetCheckedIndexes()
    If UBound($sel) = 0 Then
        _Log("‚ö†Ô∏è Ch∆∞a ch·ªçn client n√†o.")
        Return
    EndIf
    For $k = 0 To UBound($sel) - 1
        Local $r = $sel[$k]
        Local $ip = _List_GetCell($r, 2)
        ; ƒê·ªïi Status ‚Üí Updating + m√†u xanh
        _List_SetCell($r, 3, "Updating")
        ; ƒê·ªïi m√†u d√≤ng (c·∫£ row)
        Local $itemID = _GUICtrlListView_GetItemParam($hLV, $r) ; kh√¥ng d√πng ƒë∆∞·ª£c v·ªõi GUICtrlSetColor
        ; -> d√πng c√°ch ƒë∆°n gi·∫£n: t·∫°o l·∫°i m√†u b·∫±ng GUICtrlSetColor y√™u c·∫ßu ControlID
        ; C√°ch n√†y c·∫ßn l∆∞u ControlID t·ª´ng row n·∫øu mu·ªën ƒë·ªïi l·∫°i m√†u sau n√†y.
        ; ·ªû demo, m√¨nh reload ƒë·ªÉ ƒë·ªìng b·ªô m√†u theo Status.
        _Log("üì§ Send UPDATE_AGENT ‚Üí " & $ip)
    Next
    ; ƒê·ªìng b·ªô m√†u theo Status sau khi ƒë·ªïi (ƒë∆°n gi·∫£n & ch·∫Øc)
    _SyncRowColors()
EndFunc

Func _SyncRowColors()
    ; Reload l·∫°i m√†u theo Status
    Local $n = _List_GetItemCount()
    For $i = 0 To $n - 1
        Local $status = _GUICtrlListView_GetItemText($hLV, $i, 3)
        ; Kh√¥ng c√≥ ControlID t·ª´ng item -> refresh b·∫±ng c√°ch xo√° v√† th√™m l·∫°i s·∫Ω ph·ª©c t·∫°p.
        ; Gi·∫£i ph√°p: clear & load l·∫°i to√†n b·∫£ng t·ª´ model (n·∫øu b·∫°n c√≥ model).
        ; ·ªû demo, g·ªçi _ReloadDemo() ƒë·ªÉ reset m√†u chu·∫©n.
    Next
    _ReloadDemo() ; ƒë∆°n gi·∫£n: n·∫°p l·∫°i t·ª´ $gRows
EndFunc

Func _ReloadDemo()
    ; C·∫≠p nh·∫≠t l·∫°i $gRows t·ª´ n·ªôi dung hi·ªán t·∫°i c·ªßa ListView (ƒë·ªÉ kh√¥ng m·∫•t thay ƒë·ªïi Message/Status)
    Local $n = _List_GetItemCount()
    ReDim $gRows[$n][5]
    For $i = 0 To $n - 1
        $gRows[$i][0] = ""                                 ; c·ªôt "Ch·ªçn/H·ªßy Ch·ªçn" ƒë·ªÉ tr·ªëng (checkbox m·∫∑c ƒë·ªãnh)
        $gRows[$i][1] = _GUICtrlListView_GetItemText($hLV, $i, 1) ; Index
        $gRows[$i][2] = _GUICtrlListView_GetItemText($hLV, $i, 2) ; IP
        $gRows[$i][3] = _GUICtrlListView_GetItemText($hLV, $i, 3) ; Status
        $gRows[$i][4] = _GUICtrlListView_GetItemText($hLV, $i, 4) ; Message
    Next
    _LoadList($gRows)
EndFunc
